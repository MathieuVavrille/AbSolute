# 2 "src/frontend/lexer.mll"
 
 open Lexing
 open Syntax
 open Parser


(* keyword table *)
let kwd_table = Hashtbl.create 10
let _ = 
  List.iter (fun (a,b) -> Hashtbl.add kwd_table a b)
    [
      "to_draw",        TOK_DRAW; 
      "init",           TOK_INIT;
      "constraints",    TOK_CONSTR;
      "sqrt",           TOK_SQRT;
      "cos",            TOK_COS;
      "sin",            TOK_SIN;
      "int",            TOK_INT;
      "real",           TOK_REAL;
      "oo",             TOK_INF;
      "-oo",            TOK_MINF
   ]

(* (exact) parsing of decimal constants constants *)
(*let parse_const c =
  let rec div10 x n =
    if n <= 0 then x else div10 (x /. (float_of_int 10)) (n-1)
  in
  try
    let p = String.index c '.' in
    let p' = String.length c - p - 1 in
    let x = (String.sub c 0 p)^(String.sub c (p+1) p') in
    div10 (float_of_string x) p'
  with Not_found ->
    float_of_string c
*)

let parse_const = float_of_string

# 42 "src/frontend/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\225\255\002\000\007\000\227\255\078\000\090\000\231\255\
    \013\000\020\000\002\000\031\000\035\000\087\000\242\255\107\000\
    \244\255\245\255\246\255\247\255\248\255\249\255\250\255\251\255\
    \252\255\253\255\254\255\113\000\255\255\008\000\229\255\239\255\
    \238\255\237\255\236\255\234\255\233\255\188\000\198\000\162\000\
    \002\000\253\255\254\255\104\000\255\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\029\000\028\000\255\255\255\255\025\000\255\255\
    \255\255\255\255\023\000\020\000\015\000\014\000\255\255\012\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\027\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\025\000\025\000\255\255\
    \002\000\255\255\255\255\001\000\255\255";
  Lexing.lex_default = 
   "\255\255\000\000\255\255\255\255\000\000\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\029\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\042\000\
    \255\255\000\000\000\000\255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\002\000\004\000\002\000\041\000\003\000\000\000\002\000\
    \002\000\004\000\255\255\000\000\002\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\010\000\002\000\000\000\000\000\000\000\009\000\002\000\
    \026\000\025\000\016\000\018\000\020\000\017\000\005\000\015\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\035\000\019\000\013\000\011\000\012\000\034\000\
    \007\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\022\000\033\000\021\000\014\000\027\000\
    \032\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\024\000\008\000\023\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \037\000\036\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\031\000\030\000\028\000\044\000\
    \000\000\000\000\029\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\000\000\041\000\000\000\000\000\040\000\
    \000\000\000\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\043\000\000\000\000\000\000\000\
    \027\000\000\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\002\000\040\000\000\000\255\255\002\000\
    \003\000\003\000\029\000\255\255\003\000\029\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\002\000\255\255\255\255\255\255\000\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\009\000\000\000\000\000\000\000\000\000\010\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\011\000\000\000\000\000\000\000\
    \012\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \006\000\008\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\013\000\015\000\027\000\043\000\
    \255\255\255\255\015\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\255\255\039\000\255\255\255\255\039\000\
    \255\255\255\255\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\039\000\255\255\255\255\255\255\
    \027\000\255\255\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \029\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\039\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 53 "src/frontend/lexer.mll"
                                                               id
# 203 "src/frontend/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 54 "src/frontend/lexer.mll"
( try Hashtbl.find kwd_table id with Not_found -> TOK_id id )
# 207 "src/frontend/lexer.ml"

  | 1 ->
# 58 "src/frontend/lexer.mll"
         ( TOK_LPAREN )
# 212 "src/frontend/lexer.ml"

  | 2 ->
# 59 "src/frontend/lexer.mll"
         ( TOK_RPAREN )
# 217 "src/frontend/lexer.ml"

  | 3 ->
# 60 "src/frontend/lexer.mll"
         ( TOK_LBRACE )
# 222 "src/frontend/lexer.ml"

  | 4 ->
# 61 "src/frontend/lexer.mll"
         ( TOK_RBRACE )
# 227 "src/frontend/lexer.ml"

  | 5 ->
# 62 "src/frontend/lexer.mll"
         ( TOK_LBRACKET )
# 232 "src/frontend/lexer.ml"

  | 6 ->
# 63 "src/frontend/lexer.mll"
         ( TOK_RBRACKET )
# 237 "src/frontend/lexer.ml"

  | 7 ->
# 64 "src/frontend/lexer.mll"
         ( TOK_COMMA )
# 242 "src/frontend/lexer.ml"

  | 8 ->
# 65 "src/frontend/lexer.mll"
         ( TOK_SEMICOLON )
# 247 "src/frontend/lexer.ml"

  | 9 ->
# 66 "src/frontend/lexer.mll"
         ( TOK_PLUS )
# 252 "src/frontend/lexer.ml"

  | 10 ->
# 67 "src/frontend/lexer.mll"
         ( TOK_MINUS )
# 257 "src/frontend/lexer.ml"

  | 11 ->
# 68 "src/frontend/lexer.mll"
         ( TOK_MULTIPLY )
# 262 "src/frontend/lexer.ml"

  | 12 ->
# 69 "src/frontend/lexer.mll"
         ( TOK_DIVIDE )
# 267 "src/frontend/lexer.ml"

  | 13 ->
# 70 "src/frontend/lexer.mll"
         ( TOK_POW )
# 272 "src/frontend/lexer.ml"

  | 14 ->
# 71 "src/frontend/lexer.mll"
         ( TOK_LESS )
# 277 "src/frontend/lexer.ml"

  | 15 ->
# 72 "src/frontend/lexer.mll"
         ( TOK_GREATER )
# 282 "src/frontend/lexer.ml"

  | 16 ->
# 73 "src/frontend/lexer.mll"
         ( TOK_LESS_EQUAL )
# 287 "src/frontend/lexer.ml"

  | 17 ->
# 74 "src/frontend/lexer.mll"
         ( TOK_GREATER_EQUAL )
# 292 "src/frontend/lexer.ml"

  | 18 ->
# 75 "src/frontend/lexer.mll"
         ( TOK_EQUAL_EQUAL )
# 297 "src/frontend/lexer.ml"

  | 19 ->
# 76 "src/frontend/lexer.mll"
         ( TOK_NOT_EQUAL )
# 302 "src/frontend/lexer.ml"

  | 20 ->
# 77 "src/frontend/lexer.mll"
         ( TOK_ASSIGN )
# 307 "src/frontend/lexer.ml"

  | 21 ->
# 78 "src/frontend/lexer.mll"
         ( TOK_AND )
# 312 "src/frontend/lexer.ml"

  | 22 ->
# 79 "src/frontend/lexer.mll"
         ( TOK_OR )
# 317 "src/frontend/lexer.ml"

  | 23 ->
# 80 "src/frontend/lexer.mll"
         ( TOK_NOT )
# 322 "src/frontend/lexer.ml"

  | 24 ->
# 81 "src/frontend/lexer.mll"
         ( TOK_ANNOT )
# 327 "src/frontend/lexer.ml"

  | 25 ->
let
# 84 "src/frontend/lexer.mll"
           c
# 333 "src/frontend/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 84 "src/frontend/lexer.mll"
             ( TOK_const (float_of_string c) )
# 337 "src/frontend/lexer.ml"

  | 26 ->
# 87 "src/frontend/lexer.mll"
       ( comment lexbuf; token lexbuf )
# 342 "src/frontend/lexer.ml"

  | 27 ->
# 88 "src/frontend/lexer.mll"
                      ( token lexbuf )
# 347 "src/frontend/lexer.ml"

  | 28 ->
# 89 "src/frontend/lexer.mll"
          ( new_line lexbuf; token lexbuf )
# 352 "src/frontend/lexer.ml"

  | 29 ->
# 90 "src/frontend/lexer.mll"
        ( token lexbuf )
# 357 "src/frontend/lexer.ml"

  | 30 ->
# 93 "src/frontend/lexer.mll"
      ( TOK_EOF )
# 362 "src/frontend/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 39
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 97 "src/frontend/lexer.mll"
       ( () )
# 374 "src/frontend/lexer.ml"

  | 1 ->
# 98 "src/frontend/lexer.mll"
                ( comment lexbuf )
# 379 "src/frontend/lexer.ml"

  | 2 ->
# 99 "src/frontend/lexer.mll"
          ( new_line lexbuf; comment lexbuf )
# 384 "src/frontend/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

